manifest should match snapshot using containerd and resources:
  1: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
      name: RELEASE-NAME-steadybit-extension-jvm
      namespace: NAMESPACE
    spec:
      selector:
        matchLabels:
          app: steadybit-extension-jvm
          app.kubernetes.io/name: steadybit-extension-jvm
      template:
        metadata:
          annotations:
            container.apparmor.security.beta.kubernetes.io/steadybit-extension-jvm: unconfined
            steadybit.com/extension-auto-discovery: |
              {"extensions":[{"port":8087,"protocol":"http","types":["ACTION","DISCOVERY"]}]}
          labels:
            app: steadybit-extension-jvm
            app.kubernetes.io/name: steadybit-extension-jvm
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_EXTENSION_PORT
                  value: "8087"
                - name: STEADYBIT_EXTENSION_HEALTH_PORT
                  value: "8083"
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
              image: ghcr.io/steadybit/extension-jvm:latest
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /health/liveness
                  port: 8083
              name: steadybit-extension-jvm
              ports:
                - containerPort: 8087
                  name: http
                - containerPort: 8083
                  name: health
              readinessProbe:
                httpGet:
                  path: /health/readiness
                  port: 8083
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 50m
                  memory: 32Mi
              securityContext:
                capabilities:
                  add:
                    - SYS_ADMIN
                    - SYS_RESOURCE
                    - SYS_PTRACE
                    - KILL
                    - NET_ADMIN
                    - DAC_OVERRIDE
                    - SETUID
                    - SETGID
                    - AUDIT_WRITE
                readOnlyRootFilesystem: true
                runAsGroup: 10000
                runAsNonRoot: true
                runAsUser: 10000
                seccompProfile:
                  type: Unconfined
              volumeMounts:
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /sys/fs/cgroup
                  name: cgroup-root
                - mountPath: /run/containerd/containerd.sock
                  name: runtime-socket
                - mountPath: /run/containerd/runc/k8s.io
                  name: runtime-runc-root
          dnsPolicy: ClusterFirstWithHostNet
          hostNetwork: true
          hostPID: true
          volumes:
            - emptyDir: {}
              name: tmp-dir
            - hostPath:
                path: /sys/fs/cgroup
                type: Directory
              name: cgroup-root
            - hostPath:
                path: /run/containerd/containerd.sock
                type: Socket
              name: runtime-socket
            - hostPath:
                path: /run/containerd/runc/k8s.io
                type: Directory
              name: runtime-runc-root
manifest should match snapshot using crio using podAnnotations and Labels:
  1: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
      name: RELEASE-NAME-steadybit-extension-jvm
      namespace: NAMESPACE
    spec:
      selector:
        matchLabels:
          app: steadybit-extension-jvm
          app.kubernetes.io/name: steadybit-extension-jvm
      template:
        metadata:
          annotations:
            container.apparmor.security.beta.kubernetes.io/steadybit-extension-jvm: unconfined
            some-annotation: some-annotation-value
            steadybit.com/extension-auto-discovery: |
              {"extensions":[{"port":8087,"protocol":"http","types":["ACTION","DISCOVERY"]}]}
          labels:
            app: steadybit-extension-jvm
            app.kubernetes.io/name: steadybit-extension-jvm
            some-label: some-label-value
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_EXTENSION_PORT
                  value: "8087"
                - name: STEADYBIT_EXTENSION_HEALTH_PORT
                  value: "8083"
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
              image: ghcr.io/steadybit/extension-jvm:latest
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /health/liveness
                  port: 8083
              name: steadybit-extension-jvm
              ports:
                - containerPort: 8087
                  name: http
                - containerPort: 8083
                  name: health
              readinessProbe:
                httpGet:
                  path: /health/readiness
                  port: 8083
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 50m
                  memory: 32Mi
              securityContext:
                capabilities:
                  add:
                    - SYS_ADMIN
                    - SYS_RESOURCE
                    - SYS_PTRACE
                    - KILL
                    - NET_ADMIN
                    - DAC_OVERRIDE
                    - SETUID
                    - SETGID
                    - AUDIT_WRITE
                readOnlyRootFilesystem: true
                runAsGroup: 10000
                runAsNonRoot: true
                runAsUser: 10000
                seccompProfile:
                  type: Unconfined
              volumeMounts:
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /sys/fs/cgroup
                  name: cgroup-root
                - mountPath: /var/run/crio/crio.sock
                  name: runtime-socket
                - mountPath: /run/runc
                  name: runtime-runc-root
          dnsPolicy: ClusterFirstWithHostNet
          hostNetwork: true
          hostPID: true
          volumes:
            - emptyDir: {}
              name: tmp-dir
            - hostPath:
                path: /sys/fs/cgroup
                type: Directory
              name: cgroup-root
            - hostPath:
                path: /var/run/crio/crio.sock
                type: Socket
              name: runtime-socket
            - hostPath:
                path: /run/runc
                type: Directory
              name: runtime-runc-root
manifest should match snapshot using docker:
  1: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
      name: RELEASE-NAME-steadybit-extension-jvm
      namespace: NAMESPACE
    spec:
      selector:
        matchLabels:
          app: steadybit-extension-jvm
          app.kubernetes.io/name: steadybit-extension-jvm
      template:
        metadata:
          annotations:
            container.apparmor.security.beta.kubernetes.io/steadybit-extension-jvm: unconfined
            steadybit.com/extension-auto-discovery: |
              {"extensions":[{"port":8087,"protocol":"http","types":["ACTION","DISCOVERY"]}]}
          labels:
            app: steadybit-extension-jvm
            app.kubernetes.io/name: steadybit-extension-jvm
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_EXTENSION_PORT
                  value: "8087"
                - name: STEADYBIT_EXTENSION_HEALTH_PORT
                  value: "8083"
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
              image: ghcr.io/steadybit/extension-jvm:latest
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /health/liveness
                  port: 8083
              name: steadybit-extension-jvm
              ports:
                - containerPort: 8087
                  name: http
                - containerPort: 8083
                  name: health
              readinessProbe:
                httpGet:
                  path: /health/readiness
                  port: 8083
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 50m
                  memory: 32Mi
              securityContext:
                capabilities:
                  add:
                    - SYS_ADMIN
                    - SYS_RESOURCE
                    - SYS_PTRACE
                    - KILL
                    - NET_ADMIN
                    - DAC_OVERRIDE
                    - SETUID
                    - SETGID
                    - AUDIT_WRITE
                readOnlyRootFilesystem: true
                runAsGroup: 10000
                runAsNonRoot: true
                runAsUser: 10000
                seccompProfile:
                  type: Unconfined
              volumeMounts:
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /sys/fs/cgroup
                  name: cgroup-root
                - mountPath: /var/run/docker.sock
                  name: runtime-socket
                - mountPath: /run/docker/runtime-runc/moby
                  name: runtime-runc-root
          dnsPolicy: ClusterFirstWithHostNet
          hostNetwork: true
          hostPID: true
          volumes:
            - emptyDir: {}
              name: tmp-dir
            - hostPath:
                path: /sys/fs/cgroup
                type: Directory
              name: cgroup-root
            - hostPath:
                path: /var/run/docker.sock
                type: Socket
              name: runtime-socket
            - hostPath:
                path: /run/docker/runtime-runc/moby
                type: Directory
              name: runtime-runc-root
manifest should match snapshot with TLS:
  1: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
      name: RELEASE-NAME-steadybit-extension-jvm
      namespace: NAMESPACE
    spec:
      selector:
        matchLabels:
          app: steadybit-extension-jvm
          app.kubernetes.io/name: steadybit-extension-jvm
      template:
        metadata:
          annotations:
            container.apparmor.security.beta.kubernetes.io/steadybit-extension-jvm: unconfined
            steadybit.com/extension-auto-discovery: |
              {"extensions":[{"port":8087,"protocol":"https","types":["ACTION","DISCOVERY"]}]}
          labels:
            app: steadybit-extension-jvm
            app.kubernetes.io/name: steadybit-extension-jvm
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_EXTENSION_PORT
                  value: "8087"
                - name: STEADYBIT_EXTENSION_HEALTH_PORT
                  value: "8083"
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
                - name: STEADYBIT_EXTENSION_TLS_SERVER_CERT
                  value: /etc/extension/certificates/server-cert/tls.crt
                - name: STEADYBIT_EXTENSION_TLS_SERVER_KEY
                  value: /etc/extension/certificates/server-cert/tls.key
              image: ghcr.io/steadybit/extension-jvm:latest
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /health/liveness
                  port: 8083
              name: steadybit-extension-jvm
              ports:
                - containerPort: 8087
                  name: http
                - containerPort: 8083
                  name: health
              readinessProbe:
                httpGet:
                  path: /health/readiness
                  port: 8083
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 50m
                  memory: 32Mi
              securityContext:
                capabilities:
                  add:
                    - SYS_ADMIN
                    - SYS_RESOURCE
                    - SYS_PTRACE
                    - KILL
                    - NET_ADMIN
                    - DAC_OVERRIDE
                    - SETUID
                    - SETGID
                    - AUDIT_WRITE
                readOnlyRootFilesystem: true
                runAsGroup: 10000
                runAsNonRoot: true
                runAsUser: 10000
                seccompProfile:
                  type: Unconfined
              volumeMounts:
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /sys/fs/cgroup
                  name: cgroup-root
                - mountPath: /run/containerd/containerd.sock
                  name: runtime-socket
                - mountPath: /run/containerd/runc/k8s.io
                  name: runtime-runc-root
                - mountPath: /etc/extension/certificates/server-cert
                  name: certificate-server-cert
                  readOnly: true
          dnsPolicy: ClusterFirstWithHostNet
          hostNetwork: true
          hostPID: true
          volumes:
            - emptyDir: {}
              name: tmp-dir
            - hostPath:
                path: /sys/fs/cgroup
                type: Directory
              name: cgroup-root
            - hostPath:
                path: /run/containerd/containerd.sock
                type: Socket
              name: runtime-socket
            - hostPath:
                path: /run/containerd/runc/k8s.io
                type: Directory
              name: runtime-runc-root
            - name: certificate-server-cert
              secret:
                optional: false
                secretName: server-cert
manifest should match snapshot with different containerPorts:
  1: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
      name: RELEASE-NAME-steadybit-extension-jvm
      namespace: NAMESPACE
    spec:
      selector:
        matchLabels:
          app: steadybit-extension-jvm
          app.kubernetes.io/name: steadybit-extension-jvm
      template:
        metadata:
          annotations:
            container.apparmor.security.beta.kubernetes.io/steadybit-extension-jvm: unconfined
            steadybit.com/extension-auto-discovery: |
              {"extensions":[{"port":9090,"protocol":"http","types":["ACTION","DISCOVERY"]}]}
          labels:
            app: steadybit-extension-jvm
            app.kubernetes.io/name: steadybit-extension-jvm
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_EXTENSION_PORT
                  value: "9090"
                - name: STEADYBIT_EXTENSION_HEALTH_PORT
                  value: "9091"
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
              image: ghcr.io/steadybit/extension-jvm:latest
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /health/liveness
                  port: 9091
              name: steadybit-extension-jvm
              ports:
                - containerPort: 9090
                  name: http
                - containerPort: 9091
                  name: health
              readinessProbe:
                httpGet:
                  path: /health/readiness
                  port: 9091
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 50m
                  memory: 32Mi
              securityContext:
                capabilities:
                  add:
                    - SYS_ADMIN
                    - SYS_RESOURCE
                    - SYS_PTRACE
                    - KILL
                    - NET_ADMIN
                    - DAC_OVERRIDE
                    - SETUID
                    - SETGID
                    - AUDIT_WRITE
                readOnlyRootFilesystem: true
                runAsGroup: 10000
                runAsNonRoot: true
                runAsUser: 10000
                seccompProfile:
                  type: Unconfined
              volumeMounts:
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /sys/fs/cgroup
                  name: cgroup-root
                - mountPath: /run/containerd/containerd.sock
                  name: runtime-socket
                - mountPath: /run/containerd/runc/k8s.io
                  name: runtime-runc-root
          dnsPolicy: ClusterFirstWithHostNet
          hostNetwork: true
          hostPID: true
          volumes:
            - emptyDir: {}
              name: tmp-dir
            - hostPath:
                path: /sys/fs/cgroup
                type: Directory
              name: cgroup-root
            - hostPath:
                path: /run/containerd/containerd.sock
                type: Socket
              name: runtime-socket
            - hostPath:
                path: /run/containerd/runc/k8s.io
                type: Directory
              name: runtime-runc-root
manifest should match snapshot with extra env vars:
  1: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
      name: RELEASE-NAME-steadybit-extension-jvm
      namespace: NAMESPACE
    spec:
      selector:
        matchLabels:
          app: steadybit-extension-jvm
          app.kubernetes.io/name: steadybit-extension-jvm
      template:
        metadata:
          annotations:
            container.apparmor.security.beta.kubernetes.io/steadybit-extension-jvm: unconfined
            steadybit.com/extension-auto-discovery: |
              {"extensions":[{"port":8087,"protocol":"http","types":["ACTION","DISCOVERY"]}]}
          labels:
            app: steadybit-extension-jvm
            app.kubernetes.io/name: steadybit-extension-jvm
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_EXTENSION_PORT
                  value: "8087"
                - name: STEADYBIT_EXTENSION_HEALTH_PORT
                  value: "8083"
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
                - name: FOO
                  value: bar
              envFrom:
                - configMapRef: null
                  name: env-configmap
                - name: env-secrets
                  secretRef: null
              image: ghcr.io/steadybit/extension-jvm:latest
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /health/liveness
                  port: 8083
              name: steadybit-extension-jvm
              ports:
                - containerPort: 8087
                  name: http
                - containerPort: 8083
                  name: health
              readinessProbe:
                httpGet:
                  path: /health/readiness
                  port: 8083
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 50m
                  memory: 32Mi
              securityContext:
                capabilities:
                  add:
                    - SYS_ADMIN
                    - SYS_RESOURCE
                    - SYS_PTRACE
                    - KILL
                    - NET_ADMIN
                    - DAC_OVERRIDE
                    - SETUID
                    - SETGID
                    - AUDIT_WRITE
                readOnlyRootFilesystem: true
                runAsGroup: 10000
                runAsNonRoot: true
                runAsUser: 10000
                seccompProfile:
                  type: Unconfined
              volumeMounts:
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /sys/fs/cgroup
                  name: cgroup-root
                - mountPath: /run/containerd/containerd.sock
                  name: runtime-socket
                - mountPath: /run/containerd/runc/k8s.io
                  name: runtime-runc-root
          dnsPolicy: ClusterFirstWithHostNet
          hostNetwork: true
          hostPID: true
          volumes:
            - emptyDir: {}
              name: tmp-dir
            - hostPath:
                path: /sys/fs/cgroup
                type: Directory
              name: cgroup-root
            - hostPath:
                path: /run/containerd/containerd.sock
                type: Socket
              name: runtime-socket
            - hostPath:
                path: /run/containerd/runc/k8s.io
                type: Directory
              name: runtime-runc-root
manifest should match snapshot with extra labels:
  1: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
        tags.datadoghq.com/service: steadybit-extension
      name: RELEASE-NAME-steadybit-extension-jvm
      namespace: NAMESPACE
    spec:
      selector:
        matchLabels:
          app: steadybit-extension-jvm
          app.kubernetes.io/name: steadybit-extension-jvm
      template:
        metadata:
          annotations:
            container.apparmor.security.beta.kubernetes.io/steadybit-extension-jvm: unconfined
            steadybit.com/extension-auto-discovery: |
              {"extensions":[{"port":8087,"protocol":"http","types":["ACTION","DISCOVERY"]}]}
          labels:
            app: steadybit-extension-jvm
            app.kubernetes.io/name: steadybit-extension-jvm
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
            tags.datadoghq.com/service: steadybit-extension
        spec:
          containers:
            - env:
                - name: STEADYBIT_EXTENSION_PORT
                  value: "8087"
                - name: STEADYBIT_EXTENSION_HEALTH_PORT
                  value: "8083"
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
              image: ghcr.io/steadybit/extension-jvm:latest
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /health/liveness
                  port: 8083
              name: steadybit-extension-jvm
              ports:
                - containerPort: 8087
                  name: http
                - containerPort: 8083
                  name: health
              readinessProbe:
                httpGet:
                  path: /health/readiness
                  port: 8083
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 50m
                  memory: 32Mi
              securityContext:
                capabilities:
                  add:
                    - SYS_ADMIN
                    - SYS_RESOURCE
                    - SYS_PTRACE
                    - KILL
                    - NET_ADMIN
                    - DAC_OVERRIDE
                    - SETUID
                    - SETGID
                    - AUDIT_WRITE
                readOnlyRootFilesystem: true
                runAsGroup: 10000
                runAsNonRoot: true
                runAsUser: 10000
                seccompProfile:
                  type: Unconfined
              volumeMounts:
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /sys/fs/cgroup
                  name: cgroup-root
                - mountPath: /run/containerd/containerd.sock
                  name: runtime-socket
                - mountPath: /run/containerd/runc/k8s.io
                  name: runtime-runc-root
          dnsPolicy: ClusterFirstWithHostNet
          hostNetwork: true
          hostPID: true
          volumes:
            - emptyDir: {}
              name: tmp-dir
            - hostPath:
                path: /sys/fs/cgroup
                type: Directory
              name: cgroup-root
            - hostPath:
                path: /run/containerd/containerd.sock
                type: Socket
              name: runtime-socket
            - hostPath:
                path: /run/containerd/runc/k8s.io
                type: Directory
              name: runtime-runc-root
manifest should match snapshot with mutual TLS:
  1: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
      name: RELEASE-NAME-steadybit-extension-jvm
      namespace: NAMESPACE
    spec:
      selector:
        matchLabels:
          app: steadybit-extension-jvm
          app.kubernetes.io/name: steadybit-extension-jvm
      template:
        metadata:
          annotations:
            container.apparmor.security.beta.kubernetes.io/steadybit-extension-jvm: unconfined
            steadybit.com/extension-auto-discovery: |
              {"extensions":[{"port":8087,"protocol":"https","types":["ACTION","DISCOVERY"]}]}
          labels:
            app: steadybit-extension-jvm
            app.kubernetes.io/name: steadybit-extension-jvm
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_EXTENSION_PORT
                  value: "8087"
                - name: STEADYBIT_EXTENSION_HEALTH_PORT
                  value: "8083"
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
                - name: STEADYBIT_EXTENSION_TLS_SERVER_CERT
                  value: /etc/extension/certificates/server-cert/tls.crt
                - name: STEADYBIT_EXTENSION_TLS_SERVER_KEY
                  value: /etc/extension/certificates/server-cert/tls.key
                - name: STEADYBIT_EXTENSION_TLS_CLIENT_CAS
                  value: /etc/extension/certificates/client-cert-a/tls.crt,/etc/extension/certificates/client-cert-a/tls.crt
              image: ghcr.io/steadybit/extension-jvm:latest
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /health/liveness
                  port: 8083
              name: steadybit-extension-jvm
              ports:
                - containerPort: 8087
                  name: http
                - containerPort: 8083
                  name: health
              readinessProbe:
                httpGet:
                  path: /health/readiness
                  port: 8083
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 50m
                  memory: 32Mi
              securityContext:
                capabilities:
                  add:
                    - SYS_ADMIN
                    - SYS_RESOURCE
                    - SYS_PTRACE
                    - KILL
                    - NET_ADMIN
                    - DAC_OVERRIDE
                    - SETUID
                    - SETGID
                    - AUDIT_WRITE
                readOnlyRootFilesystem: true
                runAsGroup: 10000
                runAsNonRoot: true
                runAsUser: 10000
                seccompProfile:
                  type: Unconfined
              volumeMounts:
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /sys/fs/cgroup
                  name: cgroup-root
                - mountPath: /run/containerd/containerd.sock
                  name: runtime-socket
                - mountPath: /run/containerd/runc/k8s.io
                  name: runtime-runc-root
                - mountPath: /etc/extension/certificates/client-cert-a
                  name: certificate-client-cert-a
                  readOnly: true
                - mountPath: /etc/extension/certificates/server-cert
                  name: certificate-server-cert
                  readOnly: true
          dnsPolicy: ClusterFirstWithHostNet
          hostNetwork: true
          hostPID: true
          volumes:
            - emptyDir: {}
              name: tmp-dir
            - hostPath:
                path: /sys/fs/cgroup
                type: Directory
              name: cgroup-root
            - hostPath:
                path: /run/containerd/containerd.sock
                type: Socket
              name: runtime-socket
            - hostPath:
                path: /run/containerd/runc/k8s.io
                type: Directory
              name: runtime-runc-root
            - name: certificate-client-cert-a
              secret:
                optional: false
                secretName: client-cert-a
            - name: certificate-server-cert
              secret:
                optional: false
                secretName: server-cert
manifest should match snapshot with mutual TLS using containerPaths:
  1: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
      name: RELEASE-NAME-steadybit-extension-jvm
      namespace: NAMESPACE
    spec:
      selector:
        matchLabels:
          app: steadybit-extension-jvm
          app.kubernetes.io/name: steadybit-extension-jvm
      template:
        metadata:
          annotations:
            container.apparmor.security.beta.kubernetes.io/steadybit-extension-jvm: unconfined
            steadybit.com/extension-auto-discovery: |
              {"extensions":[{"port":8087,"protocol":"https","types":["ACTION","DISCOVERY"]}]}
          labels:
            app: steadybit-extension-jvm
            app.kubernetes.io/name: steadybit-extension-jvm
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_EXTENSION_PORT
                  value: "8087"
                - name: STEADYBIT_EXTENSION_HEALTH_PORT
                  value: "8083"
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
                - name: STEADYBIT_EXTENSION_TLS_SERVER_CERT
                  value: /etc/tls/server.crt
                - name: STEADYBIT_EXTENSION_TLS_SERVER_KEY
                  value: /etc/tls/server.key
                - name: STEADYBIT_EXTENSION_TLS_CLIENT_CAS
                  value: /etc/tls/ca.crt,/etc/tls/ca2.crt
              image: ghcr.io/steadybit/extension-jvm:latest
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /health/liveness
                  port: 8083
              name: steadybit-extension-jvm
              ports:
                - containerPort: 8087
                  name: http
                - containerPort: 8083
                  name: health
              readinessProbe:
                httpGet:
                  path: /health/readiness
                  port: 8083
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 50m
                  memory: 32Mi
              securityContext:
                capabilities:
                  add:
                    - SYS_ADMIN
                    - SYS_RESOURCE
                    - SYS_PTRACE
                    - KILL
                    - NET_ADMIN
                    - DAC_OVERRIDE
                    - SETUID
                    - SETGID
                    - AUDIT_WRITE
                readOnlyRootFilesystem: true
                runAsGroup: 10000
                runAsNonRoot: true
                runAsUser: 10000
                seccompProfile:
                  type: Unconfined
              volumeMounts:
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /sys/fs/cgroup
                  name: cgroup-root
                - mountPath: /run/containerd/containerd.sock
                  name: runtime-socket
                - mountPath: /run/containerd/runc/k8s.io
                  name: runtime-runc-root
          dnsPolicy: ClusterFirstWithHostNet
          hostNetwork: true
          hostPID: true
          volumes:
            - emptyDir: {}
              name: tmp-dir
            - hostPath:
                path: /sys/fs/cgroup
                type: Directory
              name: cgroup-root
            - hostPath:
                path: /run/containerd/containerd.sock
                type: Socket
              name: runtime-socket
            - hostPath:
                path: /run/containerd/runc/k8s.io
                type: Directory
              name: runtime-runc-root
