templates:
  - daemonset.yaml
tests:
  - it: manifest should match snapshot using docker
    set:
      container:
        runtime: docker
    asserts:
      - matchSnapshot: { }
  - it: manifest should match snapshot using containerd
    set:
      container:
        runtime: containerd
    asserts:
      - matchSnapshot: { }
  - it: manifest should match snapshot using crio
    set:
      container:
        runtime: cri-o
    asserts:
      - matchSnapshot: { }
  - it: manifest should fail without runtime
    set:
      container:
        runtime: null
    asserts:
      - failedTemplate:
          errorMessage: "<nil> (must be one of containerd, cri-o, docker)"
  - it: manifest should match snapshot with TLS
    set:
      tls:
        server:
          certificate:
            fromSecret: server-cert
    asserts:
      - matchSnapshot: { }
  - it: manifest should match snapshot with mutual TLS
    set:
      tls:
        server:
          certificate:
            fromSecret: server-cert
        client:
          certificates:
            fromSecrets:
              - client-cert-a
              - client-cert-a
    asserts:
      - matchSnapshot: {}
  - it: manifest should match snapshot with mutual TLS using containerPaths
    set:
      tls:
        server:
          certificate:
            path: /etc/tls/server.crt
            key:
              path: /etc/tls/server.key
        client:
          certificates:
            paths:
              - /etc/tls/ca.crt
              - /etc/tls/ca2.crt
    asserts:
      - matchSnapshot: {}
  - it: manifest should match snapshot with extra env vars
    set:
      extraEnv:
        - name: FOO
          value: "bar"
      extraEnvFrom:
        - configMapRef:
          name: env-configmap
        - secretRef:
          name: env-secrets
    asserts:
      - matchSnapshot: {}
  - it: manifest should match snapshot with different containerPorts
    set:
      containerPorts:
        http: 9090
        health: 9091
    asserts:
      - matchSnapshot: {}
