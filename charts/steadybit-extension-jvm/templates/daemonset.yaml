apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "extensionlib.names.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
  {{- include "extensionlib.labels" (list .) | nindent 4 }}
  {{- range $key, $value := .Values.extraLabels }}
    {{ $key }}: {{ $value }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "extensionlib.names.name" . }}
      app: {{ include "extensionlib.names.name" . }}
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
    {{- if eq .Values.updateStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.updateStrategy.rollingUpdate.maxUnavailable }}
    {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "extensionlib.names.name" . }}
        app: {{ include "extensionlib.names.name" . }}
        {{- include "extensionlib.labels" (list .) | nindent 8 }}
        {{- range $key, $value := .Values.extraLabels }}
        {{ $key }}: {{ $value }}
        {{- end }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- if semverCompare "<1.30-0" .Capabilities.KubeVersion.Version}}
        "container.apparmor.security.beta.kubernetes.io/extension": unconfined
        {{- end }}
        {{- include "extensionlib.annotation" (list . .Values.containerPorts.http (.Values.daemonSet.extensionlib.list) ) | nindent 8 }}
        oneagent.dynatrace.com/injection: "false"
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - image: {{ .Values.image.name }}:{{ default .Chart.AppVersion .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          name: extension
          ports:
            - name: http
              containerPort: {{ .Values.containerPorts.http }}
            - name: health
              containerPort: {{ .Values.containerPorts.health }}
          env:
            - name: STEADYBIT_EXTENSION_PORT
              value: {{ .Values.containerPorts.http | quote }}
            - name: STEADYBIT_EXTENSION_HEALTH_PORT
              value: {{ .Values.containerPorts.health | quote }}
            - name: STEADYBIT_EXTENSION_JAVA_AGENT_LOG_LEVEL
              value: {{ .Values.javaagent.logging.level | quote }}
            - name: STEADYBIT_EXTENSION_JVM_ATTACHMENT_ENABLED
              value: {{ .Values.javaagent.attachment.enabled | quote }}
            - name: STEADYBIT_EXTENSION_JVM_ATTACHMENT_PORT
              value: {{ .Values.javaagent.attachment.port | quote }}
            {{- if .Values.discovery.attributes.excludes.jvm }}
            - name: STEADYBIT_EXTENSION_DISCOVERY_ATTRIBUTES_EXCLUDES_JVM
              value: {{ join "," .Values.discovery.attributes.excludes.jvm | quote }}
            {{- end }}
            - name: STEADYBIT_EXTENSION_OCIRUNTIME_DEBUG
              value: {{ include "ociRuntime.get" (list . "debug") | quote }}
            - name: STEADYBIT_EXTENSION_OCIRUNTIME_ROOT
              value: {{ include "ociRuntime.get" (list . "root") | quote }}
            - name: STEADYBIT_EXTENSION_OCIRUNTIME_PATH
              value: {{ include "ociRuntime.get" (list . "path") | quote }}
            {{- include "extensionlib.deployment.env" (list .) | nindent 12 }}
            {{- with .Values.extraEnv }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.extraEnvFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: tmp-dir
              mountPath: /tmp
            - name: cgroup-root
              mountPath: /sys/fs/cgroup
            - name: "containerengine-socket"
              mountPath: {{ include "containerEngine.get" (list . "socket") | quote }}
            - name: "ociruntime-root"
              mountPath: {{ include "ociRuntime.get" (list . "root") | quote }}
                  {{- include "extensionlib.deployment.volumeMounts" (list .) | nindent 12 }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            successThreshold: {{ .Values.probes.liveness.successThreshold }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            httpGet:
              path: /health/liveness
              port: {{ .Values.containerPorts.health }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            successThreshold: {{ .Values.probes.readiness.successThreshold }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            httpGet:
              path: /health/readiness
              port: {{ .Values.containerPorts.health }}
          {{- with (include "omitForKuberVersion" (list . "<1.30-0" .Values.containerSecurityContext "appArmorProfile" )) }}
          securityContext:
          {{- . | nindent 12 }}
          {{- end }}
      volumes:
        - name: tmp-dir
          emptyDir: {}
        - name: cgroup-root
          hostPath:
            path: /sys/fs/cgroup
            type: Directory
        - name: "ociruntime-root"
          hostPath:
            path: {{ include "ociRuntime.get" (list . "root") | quote }}
            type: Directory
        - name: "containerengine-socket"
          hostPath:
            path: {{ include "containerEngine.get" (list . "socket") | quote }}
            type: Socket
            {{- include "extensionlib.deployment.volumes" (list .) | nindent 8 }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
          {{- with .Values.nodeSelector }}
      nodeSelector:
          {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.affinity }}
      affinity:
          {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.tolerations }}
      tolerations:
          {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
          {{- toYaml . | nindent 8 }}
          {{- end }}
