<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2023 steadybit GmbH. All rights reserved.
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.steadybit</groupId>
  <artifactId>extension-jvm-parent</artifactId>
  <version>${revision}</version>
  <name>steadybit :: Javaagents Parent</name>
  <organization>
    <name>steadybit GmbH</name>
    <url>https://steadybit.com</url>
  </organization>

  <modules>
    <module>javaagent-init</module>
    <module>javaagent-main</module>
    <module>java</module>
		<module>springboot2</module>
    <module>download</module>
  </modules>

	<packaging>pom</packaging>
  <properties>
    <revision>1.0.0-SNAPSHOT</revision>
    <java.version>8</java.version>
    <java-test.version>21</java-test.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <!-- dependencies -->
		<byte-buddy.version>1.14.18</byte-buddy.version>
		<jna.version>5.14.0</jna.version>
		<org-json.version>20240303</org-json.version>
		<logback-classic.version>1.5.6</logback-classic.version>

		<!-- Test -->
		<hsqldb.version>2.7.2</hsqldb.version>
		<wiremock.version>3.5.4</wiremock.version>
		<junit.version>5.10.3</junit.version>
    <junit-pioneer.version>2.2.0</junit-pioneer.version>
		<assertj-core.version>3.26.3</assertj-core.version>
		<mockito.version>5.12.0</mockito.version>
		<awaitility.version>4.2.1</awaitility.version>

    <!-- plugins -->
    <exec-maven-plugin.version>3.3.0</exec-maven-plugin.version>
    <flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
    <license-maven-plugin.version>2.4.0</license-maven-plugin.version>
    <maven-deploy-plugin.version>3.1.2</maven-deploy-plugin.version>
    <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
    <maven-gpg-plugin.version>3.2.4</maven-gpg-plugin.version>
    <maven-surefire-plugin.version>3.3.1</maven-surefire-plugin.version>
		<maven-shade-plugin.version>3.6.0</maven-shade-plugin.version>
		<maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
		<maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
		<build-helper-maven-plugin.version>3.6.0</build-helper-maven-plugin.version>
    <!-- Sonarcloud-->
    <sonar.organization>steadybit</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/**/target/site/jacoco/jacoco.xml
    </sonar.coverage.jacoco.xmlReportPaths>
    <sonar.qualitygate.wait>true</sonar.qualitygate.wait>
    <!--provide default empty argLine for surefire, is overridden by jacoco -->
    <argLine/>
	</properties>
  <dependencyManagement>
    <dependencies>
      <!-- our own modules -->
      <dependency>
        <groupId>com.steadybit</groupId>
        <artifactId>javaagent-init</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>com.steadybit</groupId>
        <artifactId>javaagent-main</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>com.steadybit</groupId>
        <artifactId>javaagent-setup</artifactId>
        <version>${revision}</version>
      </dependency>
			<!-- 3rd party dependencies -->
			<dependency>
				<groupId>net.bytebuddy</groupId>
				<artifactId>byte-buddy-parent</artifactId>
				<version>${byte-buddy.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>${org-json.version}</version>
			</dependency>
      <dependency>
        <groupId>net.java.dev.jna</groupId>
        <artifactId>jna</artifactId>
        <version>${jna.version}</version>
      </dependency>
      <dependency>
        <groupId>net.java.dev.jna</groupId>
        <artifactId>jna-platform</artifactId>
        <version>${jna.version}</version>
      </dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback-classic.version}</version>
			</dependency>

      <!-- Test -->
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-bom</artifactId>
				<version>${mockito.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj-core.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.awaitility</groupId>
				<artifactId>awaitility</artifactId>
				<version>${awaitility.version}</version>
			</dependency>
			<dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>mockwebserver</artifactId>
        <version>${okhttp.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit-pioneer</groupId>
        <artifactId>junit-pioneer</artifactId>
        <version>${junit-pioneer.version}</version>
        <scope>test</scope>
      </dependency>
			<dependency>
				<groupId>org.wiremock</groupId>
				<artifactId>wiremock-standalone</artifactId>
				<version>${wiremock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>${hsqldb.version}</version>
				<scope>test</scope>
			</dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${license-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${maven-gpg-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${exec-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
				</plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
          <configuration>
            <archive>
              <manifest>
                <mainClass>${start-class}</mainClass>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <redirectTestOutputToFile>false</redirectTestOutputToFile>
            <trimStackTrace>false</trimStackTrace>
            <includes>
              <include>**/*Tests.java</include>
              <include>**/*Test.java</include>
            </includes>
            <excludes>
              <exclude>**/Abstract*.java</exclude>
            </excludes>
            <!-- for junit-pioneer's @SetEnvironmentVariable we need this -->
            <argLine>
              --add-opens=java.base/java.lang=ALL-UNNAMED
              --add-opens=java.base/java.util=ALL-UNNAMED
              --add-opens=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED
              --add-opens=jdk.internal.jvmstat/sun.jvmstat.perfdata.monitor=ALL-UNNAMED
              --add-opens=jdk.internal.jvmstat/sun.jvmstat.perfdata.monitor.v2_0=ALL-UNNAMED
              --add-opens=jdk.internal.jvmstat/sun.jvmstat.perfdata.monitor.protocol.local=ALL-UNNAMED
              @{argLine}
            </argLine>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <showWarnings>true</showWarnings>
            <parameters>true</parameters>
          </configuration>
					<executions>
						<!-- use a newer java version for tests -->
						<execution>
							<id>default-testCompile</id>
							<configuration>
								<source>${java-test.version}</source>
								<target>${java-test.version}</target>
							</configuration>
						</execution>
					</executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>${flatten-maven-plugin.version}</version>
        <inherited>true</inherited>
        <executions>
          <execution>
            <!-- Tidy up all POMs before they are published -->
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
            <configuration>
              <updatePomFile>true</updatePomFile>
              <flattenMode>oss</flattenMode>
              <embedBuildProfileDependencies>true</embedBuildProfileDependencies>
              <pomElements>
                <distributionManagement>remove</distributionManagement>
              </pomElements>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <repositories>
    <repository>
      <id>central</id>
      <url>https://repo1.maven.org/maven2/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
    <repository>
      <id>github</id>
      <name>steadybit-github</name>
      <url>https://maven.pkg.github.com/steadybit/*</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
  </repositories>
  <profiles>
    <profile>
      <id>ci</id>
      <activation>
        <property>
          <name>env.CI</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <goals>
                  <goal>report</goal>
                </goals>
                <phase>prepare-package</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>public-release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <!-- This is necessary for gpg to not try to use the pinentry programs -->
                  <gpgArguments>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                  </gpgArguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>snapshot-builds</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>${maven-enforcer-plugin.version}</version>
            <executions>
              <execution>
                <id>enforce</id>
                <configuration>
                  <rules>
                    <dependencyConvergence/>
                  </rules>
                </configuration>
                <goals>
                  <goal>enforce</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
