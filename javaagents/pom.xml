<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2023 steadybit GmbH. All rights reserved.
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <!-- NOTE: when updating to the next boot version please check if we can remove our override for snakeyaml.version -->
        <version>2.7.12</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.steadybit</groupId>
    <artifactId>extension-jvm-parent</artifactId>
    <version>${revision}</version>
    <name>steadybit :: Agent Parent</name>
    <organization>
        <name>steadybit GmbH</name>
        <url>https://steadybit.com</url>
    </organization>

    <modules>
        <module>agent-bundles-core</module>
        <module>agent-bundles-discovery</module>
        <module>agent-bundles-attack</module>
        <module>download</module>
    </modules>
    <packaging>pom</packaging>
    <properties>
        <revision>1.0.0-SNAPSHOT</revision>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- steadybit bundles -->
        <agent-bundles-core.version>${project.version}</agent-bundles-core.version>
        <agent-bundles-discovery.version>${project.version}</agent-bundles-discovery.version>
        <agent-bundles-attack.version>${project.version}</agent-bundles-attack.version>
        <steadybit-connector-api.version>1.0.1</steadybit-connector-api.version>
        <!-- dependencies -->
        <javax-validation.version>2.0.1.Final</javax-validation.version>
        <animal-sniffer.version>1.22</animal-sniffer.version>
        <aws-sdk.version>2.17.253</aws-sdk.version>
        <checker-qual.version>3.19.0</checker-qual.version>
        <commons-compress.version>1.23.0</commons-compress.version>
        <commons-io.version>2.12.0</commons-io.version>
        <commons-net.version>3.9.0</commons-net.version>
        <errorprone.version>2.18.0</errorprone.version>
        <grpc.version>1.53.0</grpc.version>
        <guava.version>32.0.0-jre</guava.version>
        <hystrix.version>1.5.18</hystrix.version>
        <instana.trace.sdk.version>1.2.0</instana.trace.sdk.version>
        <io-fabric-kubernetes.version>5.12.4</io-fabric-kubernetes.version>
        <janino.version>3.1.9</janino.version>
        <jna.version>5.13.0</jna.version>
        <jnr-unixsocket.version>0.38.17</jnr-unixsocket.version>
        <junit-pioneer.version>2.0.0</junit-pioneer.version>
        <logback-length-splitting-appender.version>0.4.0</logback-length-splitting-appender.version>
        <logstash-logback-encoder.version>7.3</logstash-logback-encoder.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <okio.version>2.10.0</okio.version>
        <org-json.version>20230227</org-json.version>
        <oshi-core.version>6.4.1</oshi-core.version>
        <protobuf.version>3.22.2</protobuf.version>
        <resilience4j.version>1.7.1</resilience4j.version>
        <testcontainers.version>1.18.1</testcontainers.version>
        <testcontainers.keycloak.version>2.5.0</testcontainers.keycloak.version>
        <wiremock.version>2.35.0</wiremock.version>
        <snakeyaml.version>1.33</snakeyaml.version>
        <sslcontext-kickstart.version>7.4.11</sslcontext-kickstart.version>
        <opentelemetry-bom.version>1.24.0</opentelemetry-bom.version>
        <ipaddress.version>5.4.0</ipaddress.version>
        <!-- plugins -->
        <exec-maven-plugin.version>3.1.0</exec-maven-plugin.version>
        <flatten-maven-plugin.version>1.4.0</flatten-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.10</jacoco-maven-plugin.version>
        <license-maven-plugin.version>2.0.0</license-maven-plugin.version>
        <maven-deploy-plugin.version>3.0.0</maven-deploy-plugin.version>
        <maven-enforcer-plugin.version>3.1.0</maven-enforcer-plugin.version>
        <maven-gpg-plugin.version>3.0.1</maven-gpg-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M7</maven-surefire-plugin.version>
        <!-- Sonarcloud-->
        <sonar.organization>steadybit</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/**/target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <sonar.qualitygate.wait>true</sonar.qualitygate.wait>
        <!--provide default empty argLine for surefire, is overridden by jacoco -->
        <argLine></argLine>
        <!-- Gradle Enterprise -->
        <gradle.predictive.test.selection.enabled>false</gradle.predictive.test.selection.enabled>
    </properties>
    <dependencyManagement>
        <!-- our own modules -->
        <dependencies>
            <dependency>
                <groupId>com.steadybit</groupId>
                <artifactId>agent</artifactId>
                <version>${revision}</version>
            </dependency>


            <!-- CORE -->


            <!-- DISCOVERY -->

            <dependency>
                <groupId>com.steadybit</groupId>
                <artifactId>discovery-java</artifactId>
                <version>${agent-bundles-discovery.version}</version>
            </dependency>

            <dependency>
                <groupId>com.steadybit</groupId>
                <artifactId>discovery-springboot</artifactId>
                <version>${agent-bundles-discovery.version}</version>
            </dependency>


            <!--ATTACK-->

            <dependency>
                <groupId>com.steadybit</groupId>
                <artifactId>attack-java</artifactId>
                <version>${agent-bundles-attack.version}</version>
            </dependency>


            <!-- dependencies-->
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
            </dependency>
            <dependency>
                <groupId>com.latch</groupId>
                <artifactId>logback-length-splitting-appender</artifactId>
                <version>${logback-length-splitting-appender.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>animal-sniffer-annotations</artifactId>
                <version>${animal-sniffer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_annotations</artifactId>
                <version>${errorprone.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents.client5</groupId>
                <artifactId>httpclient5</artifactId>
                <version>${httpclient5.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents.core5</groupId>
                <artifactId>httpcore5-reactive</artifactId>
                <version>${httpcore5-reactive.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-bom</artifactId>
                <version>${grpc.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <!-- we pin the guava to the non-android version-->
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okio</groupId>
                <artifactId>okio</artifactId>
                <version>${okio.version}</version>
            </dependency>
            <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna</artifactId>
                <version>${jna.version}</version>
            </dependency>
            <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna-platform</artifactId>
                <version>${jna.version}</version>
            </dependency>
            <dependency>
                <groupId>com.steadybit.shared</groupId>
                <artifactId>connector-api</artifactId>
                <version>${steadybit-connector-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.jnr</groupId>
                <artifactId>jnr-unixsocket</artifactId>
                <version>${jnr-unixsocket.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons-compress.version}</version>
            </dependency>
            <dependency>
                <groupId>org.json</groupId>
                <artifactId>json</artifactId>
                <version>${org-json.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.oshi</groupId>
                <artifactId>oshi-core</artifactId>
                <version>${oshi-core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-client</artifactId>
                <version>${io-fabric-kubernetes.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-model</artifactId>
                <version>${io-fabric-kubernetes.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>openshift-client</artifactId>
                <version>${io-fabric-kubernetes.version}</version>
            </dependency>
            <dependency>
                <groupId>com.instana</groupId>
                <artifactId>instana-java-sdk</artifactId>
                <version>${instana.trace.sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>metrics-spi</artifactId>
                <version>${aws-sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${javax-validation.version}</version>
            </dependency>
            <!-- Telemetry -->
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-bom</artifactId>
                <version>${opentelemetry-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-semconv</artifactId>
                <version>${opentelemetry-bom.version}-alpha</version>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-sdk-extension-autoconfigure</artifactId>
                <version>${opentelemetry-bom.version}-alpha</version>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry.instrumentation</groupId>
                <artifactId>opentelemetry-instrumentation-bom-alpha</artifactId>
                <version>${opentelemetry-bom.version}-alpha</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- dependencies from discovery-->
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>${aws-sdk.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.github.resilience4j</groupId>
                <artifactId>resilience4j-circuitbreaker</artifactId>
                <version>${resilience4j.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.resilience4j</groupId>
                <artifactId>resilience4j-reactor</artifactId>
                <version>${resilience4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.netflix.hystrix</groupId>
                <artifactId>hystrix-core</artifactId>
                <version>${hystrix.version}</version>
            </dependency>
            <dependency>
                <groupId>io.reactivex</groupId>
                <artifactId>rxjava</artifactId>
                <version>${rxjava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.steadybit</groupId>
                <artifactId>container-clients</artifactId>
                <version>${agent-bundles-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.checkerframework</groupId>
                <artifactId>checker-qual</artifactId>
                <version>${checker-qual.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp-tls</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <!-- Test -->
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>mockwebserver</artifactId>
                <version>${okhttp.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>${commons-net.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit-pioneer</groupId>
                <artifactId>junit-pioneer</artifactId>
                <version>${junit-pioneer.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.github.dasniko</groupId>
                <artifactId>testcontainers-keycloak</artifactId>
                <version>${testcontainers.keycloak.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.github.tomakehurst</groupId>
                <artifactId>wiremock-jre8-standalone</artifactId>
                <version>${wiremock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-server-mock</artifactId>
                <version>${io-fabric-kubernetes.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.github.hakky54</groupId>
                <artifactId>sslcontext-kickstart</artifactId>
                <version>${sslcontext-kickstart.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.hakky54</groupId>
                <artifactId>sslcontext-kickstart-for-pem</artifactId>
                <version>${sslcontext-kickstart.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${license-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${maven-gpg-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <archive>
                            <manifest>
                                <mainClass>${start-class}</mainClass>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <properties>
                            <predictiveSelection>
                                <enabled>${gradle.predictive.test.selection.enabled}</enabled>
                            </predictiveSelection>
                        </properties>
                        <redirectTestOutputToFile>false</redirectTestOutputToFile>
                        <trimStackTrace>false</trimStackTrace>
                        <includes>
                            <include>**/*Tests.java</include>
                            <include>**/*Test.java</include>
                        </includes>
                        <excludes>
                            <exclude>**/Abstract*.java</exclude>
                        </excludes>
                        <!-- for junit-pioneer's @SetEnvironmentVariable we need this -->
                        <argLine>
                            --add-opens=java.base/java.lang=ALL-UNNAMED
                            --add-opens=java.base/java.util=ALL-UNNAMED
                            --add-opens=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED
                            --add-opens=jdk.internal.jvmstat/sun.jvmstat.perfdata.monitor=ALL-UNNAMED
                            --add-opens=jdk.internal.jvmstat/sun.jvmstat.perfdata.monitor.v2_0=ALL-UNNAMED
                            --add-opens=jdk.internal.jvmstat/sun.jvmstat.perfdata.monitor.protocol.local=ALL-UNNAMED
                            @{argLine}
                        </argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <showWarnings>true</showWarnings>
                        <parameters>true</parameters>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok-mapstruct-binding</artifactId>
                                <version>${lombok-mapstruct-binding.version}</version>
                            </path>
                            <!-- other annotation processors -->
                        </annotationProcessorPaths>
                        <compilerArgs>
                            <compilerArg>
                                -Amapstruct.unmappedTargetPolicy=ERROR
                            </compilerArg>
                        </compilerArgs>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <!-- Tidy up all POMs before they are published -->
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                        <configuration>
                            <updatePomFile>true</updatePomFile>
                            <flattenMode>oss</flattenMode>
                            <embedBuildProfileDependencies>true</embedBuildProfileDependencies>
                            <pomElements>
                                <distributionManagement>remove</distributionManagement>
                            </pomElements>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
<!--            <plugin>-->
<!--              <groupId>org.apache.maven.plugins</groupId>-->
<!--              <artifactId>maven-dependency-plugin</artifactId>-->
<!--              <executions>-->
<!--                <execution>-->
<!--                  <id>copy</id>-->
<!--                  <phase>generate-resources</phase>-->
<!--                  <goals>-->
<!--                    <goal>copy</goal>-->
<!--                  </goals>-->
<!--                </execution>-->
<!--              </executions>-->
<!--              <configuration>-->
<!--                <artifactItems>-->
<!--                  <artifactItem>-->
<!--                    <groupId>com.steadybit</groupId>-->
<!--                    <artifactId>attack-java-javaagent</artifactId>-->
<!--                    <version>${revision}</version>-->
<!--                    <type>jar</type>-->
<!--                    <overWrite>true</overWrite>-->
<!--                    <outputDirectory>${project.build.directory}/javaagent</outputDirectory>-->
<!--                  </artifactItem>-->
<!--                  <artifactItem>-->
<!--                    <groupId>com.steadybit</groupId>-->
<!--                    <artifactId>javaagent-main</artifactId>-->
<!--                    <version>${revision}</version>-->
<!--                    <type>jar</type>-->
<!--                    <overWrite>true</overWrite>-->
<!--                    <outputDirectory>${project.build.directory}/javaagent</outputDirectory>-->
<!--                  </artifactItem>-->
<!--                  <artifactItem>-->
<!--                    <groupId>com.steadybit</groupId>-->
<!--                    <artifactId>javaagent-init</artifactId>-->
<!--                    <version>${revision}</version>-->
<!--                    <type>jar</type>-->
<!--                    <overWrite>true</overWrite>-->
<!--                    <outputDirectory>${project.build.directory}/javaagent</outputDirectory>-->
<!--                  </artifactItem>-->
<!--                  <artifactItem>-->
<!--                    <groupId>com.steadybit</groupId>-->
<!--                    <artifactId>discovery-java-javaagent</artifactId>-->
<!--                    <version>${revision}</version>-->
<!--                    <type>jar</type>-->
<!--                    <overWrite>true</overWrite>-->
<!--                    <outputDirectory>${project.build.directory}/javaagent</outputDirectory>-->
<!--                  </artifactItem>-->
<!--                  <artifactItem>-->
<!--                    <groupId>com.steadybit</groupId>-->
<!--                    <artifactId>discovery-springboot-javaagent</artifactId>-->
<!--                    <version>${revision}</version>-->
<!--                    <type>jar</type>-->
<!--                    <overWrite>true</overWrite>-->
<!--                    <outputDirectory>${project.build.directory}/javaagent</outputDirectory>-->
<!--                  </artifactItem>-->
<!--                </artifactItems>-->
<!--                <stripVersion>true</stripVersion>-->
<!--                <overWriteReleases>false</overWriteReleases>-->
<!--                <overWriteSnapshots>true</overWriteSnapshots>-->
<!--              </configuration>-->
<!--            </plugin>-->
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo1.maven.org/maven2/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <repository>
            <id>github</id>
            <name>steadybit-github</name>
            <url>https://maven.pkg.github.com/steadybit/*</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>
    <profiles>
        <profile>
            <id>ci</id>
            <activation>
                <property>
                    <name>env.CI</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>report</id>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <phase>prepare-package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>public-release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <!-- This is necessary for gpg to not try to use the pinentry programs -->
                                    <gpgArguments>
                                        <arg>--pinentry-mode</arg>
                                        <arg>loopback</arg>
                                    </gpgArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>snapshot-builds</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>${maven-enforcer-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>enforce</id>
                                <configuration>
                                    <rules>
                                        <dependencyConvergence/>
                                    </rules>
                                </configuration>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
